package file_detector

type Type int

const (
  //archive
  Epub Type = iota
  Zip
  Tar
  Rar
  Gzip
  Bz2
  SevenZip
  Pdf
  Exe
  Swf
  Rtf
  Nes
  Crs
  Cab
  Eot
  Ps
  Xz
  Deb
  Ar
  Z
  Lz
  Rpm
  Elf
  Dcm

  //application
  Wasm

  //unknown
  Unknown
)

%%{
  machine magic;

  # archive
  epub = 0x50 0x4B 0x3 0x4 0x6D 0x69 0x6D 0x65 0x74 0x79 0x70 0x65 0x61 0x70 0x70 0x6C 0x69 0x63 0x61 0x74 0x69 0x6F 0x6E 0x2F 0x65 0x70 0x75 0x62 0x2B 0x7A 0x69 0x70 %{ return Epub;};
  zip  = 0x50 0x4B (0x3 | 0x5 | 0x7) (0x4 | 0x6 | 0x8) %{return Zip;};
  tar  = any{256} 0x75 0x73 0x74 0x61 0x72 %{return Tar;};
  rar  = 0x52 0x61 0x72 0x21 0x1A 0x7 (0x0 | 0x1) %{return Rar;};
  gzip = 0x1F 0x8B 0x8 %{return Gzip;};
  bz2  = 0x42 0x5A 0x68 %{return Bz2;};
  seven_zip = 0x37 0x7A 0xBC 0xAF 0x27 0x1C %{return SevenZip;};
  pdf  = 0x25 0x50 0x44 0x46 %{return Pdf};
  exe  = 0x4D 0x5A %{return Exe};
  swf  = (0x43 | 0x46) 0x57 0x53 %{return Swf};
  rtf  = 0x7B 0x5C 0x72 0x74 0x66 %{return Rtf}; 
  nes  = 0x4E 0x45 0x53 0x1A %{return Nes};
  crx  = 0x43 0x72 0x32 0x34 %{return Crs};
  cab  = ((0x4D 0x53 0x43 0x46) | (0x49 0x53 0x63 0x28)) %{return Cab};
  eot  = 0x4C 0x50 ((0x02 0x00 0x01) | (0x01 0x00 0x00) | (0x02 0x00 0x02)) %{return Eot};
  ps   = 0x25 0x21 %{return Ps};
  xz   = 0xFD 0x37 0x7A 0x58 0x5A 0x00 %{return Xz};
  deb  = 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E 0x0A 0x64 0x65 0x62 0x69 0x61 0x6E 0x2D 0x62 0x69 0x6E 0x61 0x72 0x79 %{return Deb};
  ar   = 0x21 0x3C 0x61 0x72 0x63 0x68 0x3E %{return Ar};
  z    = ((0x1F 0xA0) | (0x1F 0x9D)) %{return Z};
  lz   = 0x4C 0x5A 0x49 0x50 %{return Lz};
  rpm  = 0xED 0xAB 0xEE 0xDB %{return Rpm};
  elf  = 0x7F 0x45 0x4C 0x46 %{return Elf};
  dcm  = 0x44 0x49 0x43 0x4D %{return Dcm};

  wasm = 0x00 0x61 0x73 0x6D 0x01 0x00 0x00 0x00 %{return Wasm};

  application = wasm;
  archive = epub | zip | tar | rar | gzip | bz2 | seven_zip | pdf | exe | swf | rtf | nes | crx | cab | eot | ps | xz | deb | ar | z | lz | rpm | elf | dcm;
  main := (archive | application) any*;
  write data;
}%%

func Detect(data []byte) Type {
  cs, p, pe, eof := 0, 0, len(data), len(data)
%%{
  write init;
  write exec;
}%%
  return Unknown
}